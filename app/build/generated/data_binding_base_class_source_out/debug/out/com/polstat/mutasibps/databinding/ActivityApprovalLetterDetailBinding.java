// Generated by view binder compiler. Do not edit!
package com.polstat.mutasibps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.polstat.mutasibps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityApprovalLetterDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final RelativeLayout headerContainer;

  @NonNull
  public final TextView headerText;

  @NonNull
  public final TextView tvApprovalNumber;

  @NonNull
  public final TextView tvCurrentPosition;

  @NonNull
  public final TextView tvCurrentUnit;

  @NonNull
  public final TextView tvLetterContent;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvNip;

  @NonNull
  public final TextView tvTargetCity;

  @NonNull
  public final TextView tvTargetPosition;

  @NonNull
  public final TextView tvTargetProvince;

  @NonNull
  public final TextView tvTargetUnit;

  private ActivityApprovalLetterDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton backButton, @NonNull RelativeLayout headerContainer,
      @NonNull TextView headerText, @NonNull TextView tvApprovalNumber,
      @NonNull TextView tvCurrentPosition, @NonNull TextView tvCurrentUnit,
      @NonNull TextView tvLetterContent, @NonNull TextView tvName, @NonNull TextView tvNip,
      @NonNull TextView tvTargetCity, @NonNull TextView tvTargetPosition,
      @NonNull TextView tvTargetProvince, @NonNull TextView tvTargetUnit) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.headerContainer = headerContainer;
    this.headerText = headerText;
    this.tvApprovalNumber = tvApprovalNumber;
    this.tvCurrentPosition = tvCurrentPosition;
    this.tvCurrentUnit = tvCurrentUnit;
    this.tvLetterContent = tvLetterContent;
    this.tvName = tvName;
    this.tvNip = tvNip;
    this.tvTargetCity = tvTargetCity;
    this.tvTargetPosition = tvTargetPosition;
    this.tvTargetProvince = tvTargetProvince;
    this.tvTargetUnit = tvTargetUnit;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityApprovalLetterDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityApprovalLetterDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_approval_letter_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityApprovalLetterDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.headerContainer;
      RelativeLayout headerContainer = ViewBindings.findChildViewById(rootView, id);
      if (headerContainer == null) {
        break missingId;
      }

      id = R.id.headerText;
      TextView headerText = ViewBindings.findChildViewById(rootView, id);
      if (headerText == null) {
        break missingId;
      }

      id = R.id.tvApprovalNumber;
      TextView tvApprovalNumber = ViewBindings.findChildViewById(rootView, id);
      if (tvApprovalNumber == null) {
        break missingId;
      }

      id = R.id.tvCurrentPosition;
      TextView tvCurrentPosition = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentPosition == null) {
        break missingId;
      }

      id = R.id.tvCurrentUnit;
      TextView tvCurrentUnit = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentUnit == null) {
        break missingId;
      }

      id = R.id.tvLetterContent;
      TextView tvLetterContent = ViewBindings.findChildViewById(rootView, id);
      if (tvLetterContent == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tvNip;
      TextView tvNip = ViewBindings.findChildViewById(rootView, id);
      if (tvNip == null) {
        break missingId;
      }

      id = R.id.tvTargetCity;
      TextView tvTargetCity = ViewBindings.findChildViewById(rootView, id);
      if (tvTargetCity == null) {
        break missingId;
      }

      id = R.id.tvTargetPosition;
      TextView tvTargetPosition = ViewBindings.findChildViewById(rootView, id);
      if (tvTargetPosition == null) {
        break missingId;
      }

      id = R.id.tvTargetProvince;
      TextView tvTargetProvince = ViewBindings.findChildViewById(rootView, id);
      if (tvTargetProvince == null) {
        break missingId;
      }

      id = R.id.tvTargetUnit;
      TextView tvTargetUnit = ViewBindings.findChildViewById(rootView, id);
      if (tvTargetUnit == null) {
        break missingId;
      }

      return new ActivityApprovalLetterDetailBinding((ConstraintLayout) rootView, backButton,
          headerContainer, headerText, tvApprovalNumber, tvCurrentPosition, tvCurrentUnit,
          tvLetterContent, tvName, tvNip, tvTargetCity, tvTargetPosition, tvTargetProvince,
          tvTargetUnit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
