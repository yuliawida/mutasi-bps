// Generated by view binder compiler. Do not edit!
package com.polstat.mutasibps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.polstat.mutasibps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final Button btnRegister;

  @NonNull
  public final TextInputEditText etConfirmPassword;

  @NonNull
  public final TextInputEditText etJabatan;

  @NonNull
  public final TextInputEditText etNIP;

  @NonNull
  public final TextInputEditText etName;

  @NonNull
  public final TextInputEditText etPassword;

  @NonNull
  public final AutoCompleteTextView etRole;

  @NonNull
  public final TextInputEditText etUnitKerja;

  @NonNull
  public final TextInputEditText etUsername;

  @NonNull
  public final ImageView ivLogo;

  @NonNull
  public final TextInputLayout tilConfirmPassword;

  @NonNull
  public final TextInputLayout tilJabatan;

  @NonNull
  public final TextInputLayout tilNIP;

  @NonNull
  public final TextInputLayout tilName;

  @NonNull
  public final TextInputLayout tilPassword;

  @NonNull
  public final TextInputLayout tilRole;

  @NonNull
  public final TextInputLayout tilUnitKerja;

  @NonNull
  public final TextInputLayout tilUsername;

  @NonNull
  public final TextView tvLogin;

  @NonNull
  public final TextView tvTitle;

  private ActivityRegisterBinding(@NonNull NestedScrollView rootView, @NonNull Button btnRegister,
      @NonNull TextInputEditText etConfirmPassword, @NonNull TextInputEditText etJabatan,
      @NonNull TextInputEditText etNIP, @NonNull TextInputEditText etName,
      @NonNull TextInputEditText etPassword, @NonNull AutoCompleteTextView etRole,
      @NonNull TextInputEditText etUnitKerja, @NonNull TextInputEditText etUsername,
      @NonNull ImageView ivLogo, @NonNull TextInputLayout tilConfirmPassword,
      @NonNull TextInputLayout tilJabatan, @NonNull TextInputLayout tilNIP,
      @NonNull TextInputLayout tilName, @NonNull TextInputLayout tilPassword,
      @NonNull TextInputLayout tilRole, @NonNull TextInputLayout tilUnitKerja,
      @NonNull TextInputLayout tilUsername, @NonNull TextView tvLogin, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnRegister = btnRegister;
    this.etConfirmPassword = etConfirmPassword;
    this.etJabatan = etJabatan;
    this.etNIP = etNIP;
    this.etName = etName;
    this.etPassword = etPassword;
    this.etRole = etRole;
    this.etUnitKerja = etUnitKerja;
    this.etUsername = etUsername;
    this.ivLogo = ivLogo;
    this.tilConfirmPassword = tilConfirmPassword;
    this.tilJabatan = tilJabatan;
    this.tilNIP = tilNIP;
    this.tilName = tilName;
    this.tilPassword = tilPassword;
    this.tilRole = tilRole;
    this.tilUnitKerja = tilUnitKerja;
    this.tilUsername = tilUsername;
    this.tvLogin = tvLogin;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRegister;
      Button btnRegister = ViewBindings.findChildViewById(rootView, id);
      if (btnRegister == null) {
        break missingId;
      }

      id = R.id.etConfirmPassword;
      TextInputEditText etConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (etConfirmPassword == null) {
        break missingId;
      }

      id = R.id.etJabatan;
      TextInputEditText etJabatan = ViewBindings.findChildViewById(rootView, id);
      if (etJabatan == null) {
        break missingId;
      }

      id = R.id.etNIP;
      TextInputEditText etNIP = ViewBindings.findChildViewById(rootView, id);
      if (etNIP == null) {
        break missingId;
      }

      id = R.id.etName;
      TextInputEditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.etPassword;
      TextInputEditText etPassword = ViewBindings.findChildViewById(rootView, id);
      if (etPassword == null) {
        break missingId;
      }

      id = R.id.etRole;
      AutoCompleteTextView etRole = ViewBindings.findChildViewById(rootView, id);
      if (etRole == null) {
        break missingId;
      }

      id = R.id.etUnitKerja;
      TextInputEditText etUnitKerja = ViewBindings.findChildViewById(rootView, id);
      if (etUnitKerja == null) {
        break missingId;
      }

      id = R.id.etUsername;
      TextInputEditText etUsername = ViewBindings.findChildViewById(rootView, id);
      if (etUsername == null) {
        break missingId;
      }

      id = R.id.ivLogo;
      ImageView ivLogo = ViewBindings.findChildViewById(rootView, id);
      if (ivLogo == null) {
        break missingId;
      }

      id = R.id.tilConfirmPassword;
      TextInputLayout tilConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (tilConfirmPassword == null) {
        break missingId;
      }

      id = R.id.tilJabatan;
      TextInputLayout tilJabatan = ViewBindings.findChildViewById(rootView, id);
      if (tilJabatan == null) {
        break missingId;
      }

      id = R.id.tilNIP;
      TextInputLayout tilNIP = ViewBindings.findChildViewById(rootView, id);
      if (tilNIP == null) {
        break missingId;
      }

      id = R.id.tilName;
      TextInputLayout tilName = ViewBindings.findChildViewById(rootView, id);
      if (tilName == null) {
        break missingId;
      }

      id = R.id.tilPassword;
      TextInputLayout tilPassword = ViewBindings.findChildViewById(rootView, id);
      if (tilPassword == null) {
        break missingId;
      }

      id = R.id.tilRole;
      TextInputLayout tilRole = ViewBindings.findChildViewById(rootView, id);
      if (tilRole == null) {
        break missingId;
      }

      id = R.id.tilUnitKerja;
      TextInputLayout tilUnitKerja = ViewBindings.findChildViewById(rootView, id);
      if (tilUnitKerja == null) {
        break missingId;
      }

      id = R.id.tilUsername;
      TextInputLayout tilUsername = ViewBindings.findChildViewById(rootView, id);
      if (tilUsername == null) {
        break missingId;
      }

      id = R.id.tvLogin;
      TextView tvLogin = ViewBindings.findChildViewById(rootView, id);
      if (tvLogin == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((NestedScrollView) rootView, btnRegister,
          etConfirmPassword, etJabatan, etNIP, etName, etPassword, etRole, etUnitKerja, etUsername,
          ivLogo, tilConfirmPassword, tilJabatan, tilNIP, tilName, tilPassword, tilRole,
          tilUnitKerja, tilUsername, tvLogin, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
