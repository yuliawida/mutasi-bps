// Generated by view binder compiler. Do not edit!
package com.polstat.mutasibps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.polstat.mutasibps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChangePasswordBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final MaterialButton btnChangePassword;

  @NonNull
  public final TextInputEditText etConfirmPassword;

  @NonNull
  public final TextInputEditText etNewPassword;

  @NonNull
  public final RelativeLayout headerContainer;

  @NonNull
  public final TextView headerText;

  @NonNull
  public final TextInputLayout inputConfirmPassword;

  @NonNull
  public final TextInputLayout inputNewPassword;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final CircularProgressIndicator progressBar;

  @NonNull
  public final TextView tvConfirmPasswordLabel;

  @NonNull
  public final TextView tvNewPasswordLabel;

  private ActivityChangePasswordBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton backButton, @NonNull MaterialButton btnChangePassword,
      @NonNull TextInputEditText etConfirmPassword, @NonNull TextInputEditText etNewPassword,
      @NonNull RelativeLayout headerContainer, @NonNull TextView headerText,
      @NonNull TextInputLayout inputConfirmPassword, @NonNull TextInputLayout inputNewPassword,
      @NonNull ConstraintLayout main, @NonNull CircularProgressIndicator progressBar,
      @NonNull TextView tvConfirmPasswordLabel, @NonNull TextView tvNewPasswordLabel) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.btnChangePassword = btnChangePassword;
    this.etConfirmPassword = etConfirmPassword;
    this.etNewPassword = etNewPassword;
    this.headerContainer = headerContainer;
    this.headerText = headerText;
    this.inputConfirmPassword = inputConfirmPassword;
    this.inputNewPassword = inputNewPassword;
    this.main = main;
    this.progressBar = progressBar;
    this.tvConfirmPasswordLabel = tvConfirmPasswordLabel;
    this.tvNewPasswordLabel = tvNewPasswordLabel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChangePasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChangePasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_change_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChangePasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.btnChangePassword;
      MaterialButton btnChangePassword = ViewBindings.findChildViewById(rootView, id);
      if (btnChangePassword == null) {
        break missingId;
      }

      id = R.id.etConfirmPassword;
      TextInputEditText etConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (etConfirmPassword == null) {
        break missingId;
      }

      id = R.id.etNewPassword;
      TextInputEditText etNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (etNewPassword == null) {
        break missingId;
      }

      id = R.id.headerContainer;
      RelativeLayout headerContainer = ViewBindings.findChildViewById(rootView, id);
      if (headerContainer == null) {
        break missingId;
      }

      id = R.id.headerText;
      TextView headerText = ViewBindings.findChildViewById(rootView, id);
      if (headerText == null) {
        break missingId;
      }

      id = R.id.inputConfirmPassword;
      TextInputLayout inputConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputConfirmPassword == null) {
        break missingId;
      }

      id = R.id.inputNewPassword;
      TextInputLayout inputNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputNewPassword == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.progressBar;
      CircularProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.tvConfirmPasswordLabel;
      TextView tvConfirmPasswordLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvConfirmPasswordLabel == null) {
        break missingId;
      }

      id = R.id.tvNewPasswordLabel;
      TextView tvNewPasswordLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvNewPasswordLabel == null) {
        break missingId;
      }

      return new ActivityChangePasswordBinding((ConstraintLayout) rootView, backButton,
          btnChangePassword, etConfirmPassword, etNewPassword, headerContainer, headerText,
          inputConfirmPassword, inputNewPassword, main, progressBar, tvConfirmPasswordLabel,
          tvNewPasswordLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
